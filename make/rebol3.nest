;-    .-.                                                                       
;-   /'v'\   SISKIN-Builder project file                                        
;-  (/uOu\)  https://github.com/Siskin-framework/Builder/                       
;-===="="=======================================================================

name:     %Rebol
group:    %rebol
product:  Base    ; default product.. the others are by include: Core or Bulk

strip:    on

root:     %../
source:   %src/
include:  %src/include/
temp:     %make/tmp/
;output:   %build/

stack-size: 4194304 ;= 4MB (4 * 1024 * 1024)
optimize:   2

version: 3.7.2

target-windows: [
	os:       windows
	sys:      win32
	vendor:   pc
	compiler: clang
	upx:      on
]
target-macos: [
	os:       macos
	sys:      darwin
	vendor:   apple
	compiler: clang
]
target-linux: [
	os:       linux
	sys:      linux
	vendor:   pc
	compiler: gcc
]
target-openbsd: [
	os:       openbsd
	sys:      openbsd
	vendor:   unknown
	compiler: clang
]

core-files: [
	%core/a-constants.c
	%core/a-globals.c
	%core/a-lib.c
	%core/b-boot.c
	%core/b-init.c
	%core/c-do.c
	%core/c-error.c
	%core/c-frame.c
	%core/c-function.c
	%core/c-handle.c
	%core/c-port.c
	%core/c-task.c
	%core/c-word.c
	%core/d-crash.c
	%core/d-dump.c
	%core/d-print.c
	%core/f-blocks.c
	%core/f-deci.c
	%core/f-dtoa.c
	%core/f-enbase.c
	%core/f-extension.c
	%core/f-int.c
	%core/f-math.c
	%core/f-modify.c
	%core/f-qsort.c
	%core/f-random.c
	%core/f-round.c
	%core/f-series.c
	%core/f-stubs.c
	%core/l-scan.c
	%core/l-types.c
	%core/m-gc.c
	%core/m-pools.c
	%core/m-series.c
;	%core/n-audio.c         ;not implemented
	%core/n-control.c
;	%core/n-crypt.c         ;optional, use: include-cryptography
	%core/n-data.c
;	%core/n-draw.c          ;old source
;	%core/n-graphics.c      ;old source
;	%core/n-image.c         ;optional, use: include-image-natives
	%core/n-io.c
	%core/n-loop.c
	%core/n-math.c
	%core/n-sets.c
	%core/n-strings.c
	%core/n-system.c
;	%core/p-audio.c        ;not implemented
	%core/p-checksum.c
;	%core/p-clipboard.c    ;optional, use: include-clipboard (windows only!)
	%core/p-console.c
	%core/p-dir.c
	%core/p-dns.c
	%core/p-event.c
	%core/p-file.c
	%core/p-net.c
;	%core/p-midi.c          ;optional, use: include-midi
;	%core/p-serial.c        ;not implemented
;	%core/p-timer.c         ;not implemented
	%core/s-cases.c
	%core/s-crc.c
	%core/s-file.c
	%core/s-find.c
	%core/s-make.c
	%core/s-mold.c
	%core/s-ops.c
	%core/s-trim.c
	%core/s-unicode.c
	%core/t-bitset.c
	%core/t-block.c
	%core/t-char.c
	%core/t-datatype.c
	%core/t-date.c
	%core/t-decimal.c
	%core/t-event.c
	%core/t-function.c
	%core/t-gob.c
	%core/t-handle.c
	%core/t-image.c
	%core/t-integer.c
	%core/t-logic.c
	%core/t-map.c
	%core/t-money.c
	%core/t-none.c
	%core/t-object.c
	%core/t-pair.c
	%core/t-port.c
	%core/t-string.c
	%core/t-struct.c
	%core/t-time.c
	%core/t-tuple.c
	%core/t-typeset.c
	%core/t-utype.c
	%core/t-vector.c
	%core/t-word.c
;	%core/u-aes.c             ;optional, use: include-cryptography
;	%core/u-bigint.c ;needed for RSA which is needed in TLS protocol (HTTPS)
;	%core/u-bmp.c             ;optional, use: include-native-bmp-codec
;	%core/u-bincode.c         ;optional, but required in many core functions
;	%core/u-chacha20.c        ;optional, use: include-cryptography
	%core/u-compress.c
;	%core/u-dh.c              ;optional, use: include-cryptography
;	%core/u-dialect.c         ;optional, use: include-dialecting (delect)
;	%core/u-gif.c             ;optional, use: include-native-gif-codec
;	%core/u-iconv.c           ;optional, use: include-iconv
;	%core/u-image-resize.c    ;optional, use: include-image-natives
;	%core/u-jpg.c             ;optional, use: include-native-jpg-codec
;	%core/u-lzma.c            ;optional, use: include-lzma-compression
	%core/u-parse.c
;	%core/u-png.c             ;optional, use: include-native-png-codec
;	%core/u-poly1305.c        ;optional, use: include-cryptography
;	%core/u-rc4.c             ;optional, use: include-cryptography
;	%core/u-rsa.c             ;optional, use: include-cryptography
;	%core/u-uECC.c            ;optional, use: include-cryptography
	%core/u-zlib.c
;	%core/u-wav.c             ;optional, use: include-native-wav-codec

	%core/u-mbedtls.c
	%core/mbedtls/platform.c
	%core/mbedtls/platform_util.c
;	%core/mbedtls/ripemd160.c         ;use: include-optional-checksums
	%core/mbedtls/sha1.c
	%core/mbedtls/sha256.c
	%core/mbedtls/sha512.c
;	%core/mbedtls/md4.c               ;use: include-optional-checksums
	%core/mbedtls/md5.c

;- deprecated checksum implementations replaced by mbedtls
;	%core/deprecated/u-sha1.c
;	%core/deprecated/u-sha2.c
;	%core/deprecated/u-md5.c
]

host-files: [
	%os/host-main.c
	%os/host-args.c
	%os/host-device.c
	%os/host-stdio.c
	%os/dev-net.c
	%os/dev-dns.c
;	%os/dev-checksum.c
;	%os/host-ext-sokol.c
;	%os/host-view.c
	#if Windows? [
		%os/win32/host-lib.c
		%os/win32/dev-stdio.c
		%os/win32/dev-file.c
		%os/win32/dev-event.c
;		%os/win32/dev-clipboard.c
;		%os/win32/dev-audio.c
;		%os/win32/dev-serial.c
;		%os/win32/host-event.c
;		%os/win32/host-window.c
;		%os/win32/host-graphics.c
;		%os/win32/host-compositor.c
	]
	#if Posix? [
		%os/posix/host-lib.c
		%os/posix/host-readline.c
		;%os/posix/host-window.c
		%os/posix/dev-file.c
		%os/posix/dev-stdio.c
		%os/posix/dev-event.c
		;%os/posix/dev-serial.c
	]
]

host-files-view: [
	#if Windows? [
		%os/win32/sys-utils.c
		%os/win32/sys-codecs.cpp
		%os/win32/sys-d2d.cpp
		;%os/win32/host-image.c
		;%win32/sys-codecs-ini.c

		%os/win32/host-event.c
		%os/win32/host-window.c
		;%os/win32/host-graphics.c
		%os/win32/host-compositor.c
	]
]

mezz-base-files: [
;-- base: low-level boot in lib context:
	%mezz/base-constants.reb
	%mezz/base-funcs.reb
	%mezz/base-series.reb
	%mezz/base-files.reb
	%mezz/base-debug.reb
	%mezz/base-defs.reb
	%mezz/base-collected.reb ; contains automatically collected code from C files
]
mezz-sys-files: [
;-- sys: low-level sys context:
	%mezz/sys-base.reb
	%mezz/sys-ports.reb
	%mezz/sys-codec.reb ; export to lib!
	%mezz/sys-load.reb
	%mezz/sys-start.reb
]
mezz-lib-files: [
;-- lib: mid-level lib context:
	%mezz/mezz-secure.reb
	%mezz/mezz-types.reb
	%mezz/mezz-func.reb
	%mezz/mezz-debug.reb
	%mezz/mezz-control.reb
	%mezz/mezz-save.reb
	%mezz/mezz-series.reb
	%mezz/mezz-files.reb
	%mezz/mezz-shell.reb
	%mezz/mezz-math.reb
	%mezz/mezz-help.reb ; move dump-obj!
	%mezz/mezz-banner.reb
;	%mezz/mezz-colors.reb ; include-mezz-colors
;	%mezz/mezz-date.reb ; Internet date support, include-mezz-date
;	%mezz/mezz-tag.reb  ; build-tag
	%mezz/mezz-tail.reb
;	%mezz/codec-unixtime.reb
;-- cryptographic           
;	%mezz/codec-utc-time.reb ; include-https
;	%mezz/codec-pkix.reb
;	%mezz/codec-der.reb      ; include-https
;	%mezz/codec-crt.reb      ; include-https
;	%mezz/codec-ppk.reb
;	%mezz/codec-ssh-key.reb
;-- compression             
;	%mezz/codec-gzip.reb
;	%mezz/codec-zip.reb
;	%mezz/codec-tar.reb
;-- other                   
;	%mezz/codec-bbcode.reb
;	%mezz/codec-json.reb
;	%mezz/codec-xml.reb
;	%mezz/codec-html-entities.reb
;	%mezz/codec-wav.reb
;	%mezz/codec-pdf.reb
;	%mezz/codec-swf.reb
;	%mezz/codec-image.reb ; included using: include-image-os-codec (windows and macos only so far)
;	%mezz/codec-image-ext.reb ; image codec extensions (codecs/png/size?)
]
mezz-prot-files: [
;-- protocols:
;	%mezz/prot-http.reb
;	%mezz/prot-tls.reb
;	%mezz/prot-whois.reb
;	%mezz/prot-mysql.reb
]
boot-host-files: [] ; may be used for custom boot script


config: [ ;- this is list of configuration (optional) defines
	INCLUDE_MBEDTLS ;- replaced original checksum implementations
	COLOR_CONSOLE   ;- use ANSI escape sequences in prompt and results

	;*** Unfinished features **************************************************/
	;INCLUDE_TASK    ;- tasks are not implemented yet, so include it only on demand

	;*** Other (not recommanded) options **************************************/
	;HAS_WIDGET_GOB  ;- used in t-gob.c
	;EXCLUDE_CHACHA20POLY1305 ; don't include chacha20 and poly1305 cipher/authentication code
	;USE_EMPTY_HASH_AS_NONE   ; a single # means NONE, else error; Used in l-scan.c file
	;DO_NOT_NORMALIZE_MAP_KEYS
	;	 with above define you would get:
	;		[a b:]     = keys-of make map! [a 1 b: 2]
	;		[a 1 b: 2] = body-of make map! [a 1 b: 2]
	;	
	;	 else:
	;		[a b]       = keys-of make map! [a 1 b: 2]
	;		[a: 1 b: 2] = body-of make map! [a 1 b: 2]

	;FORCE_ANSI_ESC_EMULATION_ON_WINDOWS  ; would not try to use MS' built-in VIRTUAL_TERMINAL_PROCESSING
	;EXCLUDE_VECTOR_MATH  ; don't include vector math support (like: 3 * #[vector! integer! 8 3 [1 2 3]]); Used in t-vector.c file
	;WRITE_ANY_VALUE_TO_CLIPBOARD ; https://github.com/Oldes/Rebol-issues/issues/1619

	;SERIES_LABELS ; used for special debug purposes
	;SHOW_SIZEOFS  ; for debugging ports to some new systems
	;SHOW_EXPAND_STACK ; will print info when stack expands
	;NDEBUG        ; removes some asserts
	;TEST_SCAN
	;_DEBUG

	;*** Memory pool special defines (were not used!) *************************/
	; these were found in sources, but never actually used...
	;CHAFF    ; Fill series data to crash old references (crashes at start, so hard to say, if it's ok)
	;MUNGWALL ; "MungWall"-style sentinels for REBNODEs (missing Mung_Check function, not ok!) Amiga only?
]

;-------------------------------------------------------------------------------
;- Include definitions (for fine-tunning products)                              
;-------------------------------------------------------------------------------

;- image related natives and codecs:                                            
include-image-natives: [
	; image related native functions like:
	; `hsv-to-rgb`, `rgb-to-hsv`, `tint`, `resize`, `premultiply`, `blur`
	; on Windows also: `image` as common entry to os image codec (if enabled)
	config: INCLUDE_IMAGE_NATIVES
	core-files: %core/n-image.c
	core-files: %core/u-image-resize.c
	core-files: %core/u-image-blur.c
]

include-native-bmp-codec: [config: INCLUDE_BMP_CODEC core-files: %core/u-bmp.c]
include-native-png-codec: [config: INCLUDE_PNG_CODEC core-files: %core/u-png.c]
include-native-qoi-codec: [config: INCLUDE_QOI_CODEC core-files: %core/u-qoi.c]
include-native-jpg-codec: [config: INCLUDE_JPG_CODEC core-files: %core/u-jpg.c]
include-native-gif-codec: [config: INCLUDE_GIF_CODEC core-files: %core/u-gif.c]

;@@ on Windows it's better to use system image codec (ability to use more types)
include-image-os-codec: [
	config: INCLUDE_IMAGE_OS_CODEC
	mezz-lib-files: %mezz/codec-image.reb
	#if Windows? [
		host-files: %os/win32/host-image.c
	]
	#if MacOS? [
		host-files: [
			%os/osx/host-image.c
			%os/osx/sys-codecs.m
			%os/osx/sys-utils.m
		]
		frameworks: [CoreGraphics CoreImage ImageIO Foundation]
	]
]

include-image-codecs: [
	#if Windows? [
		:include-image-os-codec
	]
	#if Linux? [
		:include-native-bmp-codec
		:include-native-png-codec
		:include-native-jpg-codec
		:include-native-gif-codec
	]
	#if MacOS? [
		:include-image-os-codec
	]
	#if OpenBSD? [
		:include-native-bmp-codec
		:include-native-png-codec
		:include-native-jpg-codec
		:include-native-gif-codec
	]
	:include-native-qoi-codec
	mezz-lib-files: %mezz/codec-image-ext.reb ; png/size? function and similar
]

;- native devices:                                                              
include-clipboard: [
	#if Windows? [
		config:     INCLUDE_CLIPBOARD
		core-files: %core/p-clipboard.c
		host-files: %os/win32/dev-clipboard.c
	]
	#if macOS? [
		config:     INCLUDE_CLIPBOARD
		core-files: %core/p-clipboard.c
		host-files: %os/osx/dev-clipboard.c
		host-files: %os/osx/sys-clipboard.m
		host-files: %os/osx/sys-utils.m
		framework:  AppKit
	]
]
include-midi: [
	#if Windows? [
		core-files: %core/p-midi.c
		host-files: %os/win32/dev-midi.c
		config:     INCLUDE_MIDI_DEVICE
		library:    %winmm
	]
	#if macOS? [
		core-files: %core/p-midi.c
		host-files: %os/osx/dev-midi.c
		config:     INCLUDE_MIDI_DEVICE
		frameworks: [CoreServices CoreMIDI]

	]
	#if Linux? [
		; there is no support yet
	]
	#if OpenBSD? [
		; there is no support yet
	]
]

;- native utilities:                                                            
include-bincode:    [core-files: %core/u-bincode.c]
include-dialecting: [core-files: %core/u-dialect.c config: INCLUDE_DELECT]
include-iconv: [
	core-files: %core/u-iconv.c
	#if macOS? [
		library: %iconv
	]
	#if OpenBSD? [
		library: %iconv
		cflags:  "-I/usr/local/include"
		lflag: "-L/usr/local/lib"
	]
]

;- native cryptography:                                                         
include-cryptography: [
	config: INCLUDE_CRYPTOGRAPHY
	core-files: [
		%core/n-crypt.c
		%core/u-aes.c 
		%core/u-bigint.c ;needed for RSA which is needed in TLS protocol (HTTPS)
		%core/u-chacha20.c
		%core/u-dh.c
		%core/u-poly1305.c
		%core/u-rc4.c
		%core/u-rsa.c
		%core/u-uECC.c
	]
	:include-codec-crt
	:include-codec-der
	:include-codec-pkix
	:include-codec-ppk
	:include-codec-ssh-key
]

;- native additional checksums:                                                 
include-optional-checksums: [
	config: INCLUDE_MD4        ; checksum: MD4 (unsecure)
	config: INCLUDE_RIPEMD160  ; checksum: RIPE-MD-160 (requires INCLUDE_MBEDTLS)
	config: INCLUDE_SHA224
	config: INCLUDE_SHA384
	core-files: [
		%core/mbedtls/md4.c
		%core/mbedtls/ripemd160.c
	]
]
include-base85-encoding: [
	; adds support for enbase/debase with base 85 (ASCII85)
	config: INCLUDE_BASE85
]

;- native additional compressions:                                              
include-lzma-compression: [
	config: INCLUDE_LZMA
	core-files: %core/u-lzma.c
]

include-crush-compression: [
	config: INCLUDE_CRUSH
	core-files: %core/u-crush.c
]

include-png-filter-native: [
	config: INCLUDE_PNG_FILTER
	core-files: %core/u-png-filter.c
]

include-view: [
	; currently only on Windows!
	host-files: :host-files-view
	#if Windows? [
		define: REB_VIEW
		:include-image-os-codec
		libraries: [
			%Gdi32
			%Msimg32                   ;- for AlphaBlend
			%Ole32 %OleAut32 %Comctl32 ;- for native widgets & COM access
			%UxTheme                   ;- used for visual defaults
			;%opengl32 %glu32           ;- OpenGL
			;%Shell32         ;- for drag and drop (DragQueryPoint, DragQueryFileW, DragFinish, DragAcceptFiles)
		]
	]
]

;- native tests:                                                                
include-test-extension: [
	host-files: %os/host-ext-test.c
	config:     TEST_EXTENSIONS ;@@TODO: rename!
]

;- native experimantal code:                                                    
include-native-wav-codec: [
	; native WAV codec was just a prove of concept, don't use it
	; there is more feature full Rebol implementation instead
	core-files: %core/u-wav.c
	config:     INCLUDE_WAV_CODEC
]

;- Mezzanine level includes                                                     
; crypto codecs:
include-codec-crt:           [
	:include-codec-pkix
	:include-codec-der
	mezz-lib-files:  %mezz/codec-crt.reb
]
include-codec-der:           [mezz-lib-files:  %mezz/codec-der.reb          ]
include-codec-pkix:          [mezz-lib-files:  %mezz/codec-pkix.reb         ]
include-codec-ppk:           [mezz-lib-files:  %mezz/codec-ppk.reb          ]
include-codec-ssh-key:       [mezz-lib-files:  %mezz/codec-ssh-key.reb      ]
; compression codecs:
include-codec-gzip:          [mezz-lib-files:  %mezz/codec-gzip.reb         ]
include-codec-zip:           [mezz-lib-files:  %mezz/codec-zip.reb          ]
include-codec-tar:           [mezz-lib-files:  %mezz/codec-tar.reb          ]
include-codec-ar:            [mezz-lib-files:  %mezz/codec-ar.reb           ]
; other codecs:
include-codec-bbcode:        [mezz-lib-files:  %mezz/codec-bbcode.reb       ]
include-codec-html-entities: [mezz-lib-files:  %mezz/codec-html-entities.reb]
include-codec-ico: [
	; at this moment ico can be encoded only from pngs!
	;:include-native-png-codec 
	mezz-lib-files: %mezz/codec-ico.reb
]
include-codec-json:          [mezz-lib-files:  %mezz/codec-json.reb         ]
include-codec-xml:           [mezz-lib-files:  %mezz/codec-xml.reb          ]
include-codec-pdf:           [mezz-lib-files:  %mezz/codec-pdf.reb :include-png-filter-native] ; pdf may use special png pre-compression
include-codec-swf:           [mezz-lib-files:  %mezz/codec-swf.reb          ]
include-codec-wav:           [mezz-lib-files:  %mezz/codec-wav.reb          ]
include-codec-unixtime:      [mezz-lib-files:  %mezz/codec-unixtime.reb     ]
; mezzanines:
include-mezz-ansi:           [mezz-lib-files:  %mezz/mezz-ansi.reb          ]
include-mezz-date:           [mezz-lib-files:  %mezz/mezz-date.reb          ]
include-mezz-colors:         [mezz-lib-files:  %mezz/mezz-colors.reb        ]
; protocols:
include-prot-whois:          [mezz-prot-files: %mezz/prot-whois.reb         ]
include-prot-mysql:          [mezz-prot-files: %mezz/prot-mysql.reb         ]

include-prebol:              [mezz-lib-files: %modules/prebol.reb           ]

include-https: [
	:include-bincode
	:include-cryptography
	mezz-lib-files: [
		%mezz/codec-utc-time.reb
		%mezz/codec-der.reb
		%mezz/codec-crt.reb
	]
	mezz-prot-files: [
		%mezz/prot-http.reb
		%mezz/prot-tls.reb
	]
]

;- Product specifications                                                       

include-rebol-core: [
	:include-mezz-ansi
	:include-clipboard
	:include-cryptography
	:include-bincode
	:include-iconv
	:include-https

	:include-codec-unixtime
	:include-codec-ar
	:include-codec-gzip
	:include-codec-zip
	:include-codec-tar
	
	config: INCLUDE_SHA224
	config: INCLUDE_SHA384

	product: Core
]

include-rebol-bulk: [
	:include-rebol-core
	:include-optional-checksums
	:include-image-natives
	:include-lzma-compression
	:include-crush-compression
	:include-base85-encoding
	:include-view
	:include-midi

	:include-codec-pdf
	:include-codec-swf
	:include-codec-gzip
	:include-codec-zip
	:include-codec-tar
	:include-codec-bbcode
	:include-codec-html-entities	
	:include-codec-json
	:include-codec-xml
	:include-codec-wav
	:include-codec-ico

	:include-image-codecs ; use other optional image codecs before this include!

	:include-mezz-date
	:include-mezz-colors

	:include-prebol

	:include-prot-whois
	:include-prot-mysql

	:include-dialecting  ;`delect`

	config: INCLUDE_PNG_FILTER ; includes `filter` and `unfilter` natives

	;- for tests:
	;:include-test-extension
	;- not recommanded:
	;:include-native-wav-codec

	product: Bulk
]

common: [
	files: :core-files
	clean: %core/b-init.c ;make-boot.reb modifies embedded native code, so b-init.c must be always recompiled

	;define: :config
	define: {REBOL_OPTIONS_FILE=\"gen-config.h\"} ;@@ TODO: should be auto-escaped!

	;cflags: [-ffast-math]

	#if Windows? [
		libraries: [
			%User32
			%wsock32 
			%comdlg32 ;- for GetOpenFileName and GetSaveFileName (request-file)
			%Shell32  ;- for the win32 unicoded program arguments & drag and drop in View
			;%Ntdll   ;- for IsWindows*OrGreater functions
			%Ole32
			;%m
		]
		defines: ENDIAN_LITTLE
		defines: [UNICODE _UNICODE]
		defines: _CRT_SECURE_NO_WARNINGS
	]
	#if macOS? [
		library: %m
		defines: ENDIAN_LITTLE
		defines: USE_OLD_PIPE
		cflags:  -Wno-pointer-sign
		flag:    -mmacosx-version-min=10.9 
	]
	#if Linux? [
		library: %m
		defines: ENDIAN_LITTLE
	]
	#if OpenBSD? [
		library: %m
		defines: ENDIAN_LITTLE
	]
]

common-host: [
	files: :host-files
	#if Windows? [
		flag:     mconsole
		;flag:    mwindows define: _WINDOWS
		library:  %Advapi32 ;- needed for OS_Browse
		resource: %make/r3.rc
	]
	;#if Posix []
	#if Linux? [
	;	flag: -fvisibility=hidden
		flag: -fPIC       ; position independent (used for libs)
	]
	#if OpenBSD? [
		flag: -fPIC	; position independent (used for libs)
	]
]

arch-x64: [
	arch: x64
	define: _FILE_OFFSET_BITS=64
	#if Linux? [
		library: %dl
		defines: TO_LINUX_X64
		defines: __LP64__ ; has long (integer) 64 bits
	]
	#if Windows? [
		defines: TO_WIN32_X64
		defines: _WIN32
		defines: __LLP64__ ; 64-bit, long (integer) has 32 bits and 'void *' is sizeof(long long)
	]
	#if macOS? [
		defines: TO_OSX_X64
		defines: __LP64__ ; same like LLP64, but long (integer) has 64 bits instead of 32
	] 
	#if OpenBSD? [
		defines: TO_OPENBSD
	]
]
arch-x86: [
	arch: x86
	#if Linux? [
		library: %dl
		defines: TO_LINUX_X86
	]
	#if Windows? [
		resource-options: "--target=pe-i386"
		defines: TO_WIN32
	]
	#if OpenBSD? [
		defines: TO_OPENBSD
	]
]
arch-arm64: [
	:arch-x64
	arch: arm64
	flags: ["-arch arm64"]
	;define: __arm64__
]


;-------------------------------------------------------------------------------
;- optional settings:                                                           
;-------------------------------------------------------------------------------

clang-size-optimization: [
	;flags:  [-flto -fuse-ld=lld] ;<- /manifestdependency: is not allowed in .drectve error :-(
]

gcc-size-optimization: [
	;- for minimal size:
	;; https://interrupt.memfault.com/blog/code-size-optimization-gcc-flags
	flags:   -O2   ;@@ using -Os leads to compilation errors (too drastic optimizations somewhere)
	flags:   -flto ; link time optimization
	cflags: [-ffunction-sections -fdata-sections]
	lflags: "-Wl,--gc-sections"
]

;-------------------------------------------------------------------------------
;- Action definitions (experimantal so far!)                                    
;-------------------------------------------------------------------------------
;; the idea is, that it should be possible to specify, if the action should be
;; executed immediatelly when is being parsed, before or after compilation.
;; So far it's only before compilation (and not handled by msvc project maker!)

probe-spec: action ["Probe current spec structure"][
	do [? spec]
]
pre-make:   action [@pre "Pre-make headers and boot code"][
	do %make/pre-make.r3 "$NEST_SPEC"
]

;-------------------------------------------------------------------------------
;- All possible compilation targets (eggs) and commands                         
;-------------------------------------------------------------------------------

; target shortcuts..
make-exe: [
	:common
	:common-host
	defines: [REB_EXE]
	do %make/pre-make.r3 "$NEST_SPEC"
]
make-x86-exe:   [:arch-x86   :make-exe ]
make-x64-exe:   [:arch-x64   :make-exe ]
make-arm64-exe: [:arch-arm64 :make-exe ]

; for making Rebol as a shared library
make-dll: [
	:common
	;:common-host
	defines: [REB_API]
	flags:   [-O2 shared]
	upx: off
	#if Posix? [ flag: fPIC upx: off ]
	#if macOS? [ flag: fno-common strip: off]
	do %make/pre-make.r3 "$NEST_SPEC"
]
; for testing host app using shared library
make-host: [
	:common
	files: none ;includes only host files
	:common-host
	#if Posix? [upx: off]
	do %make/pre-make.r3 "$NEST_SPEC"
]
make-x86-dll:  [:arch-x86 :make-dll  ]
make-x64-dll:  [:arch-x64 :make-dll  ]
make-x86-host: [:arch-x86 :make-host ]
make-x64-host: [:arch-x64 :make-host ]

eggs: [
	#if Windows? [
;		"Pre-make (minimum included)" [
;			pre-make
;		]
;		"Pre-make (all included)" [
;			:include-rebol-bulk
;			pre-make
;		]
		"Rebol/Base windows-x86" [
			name:     %rebol3-base-windows-x86
			:target-windows
			:make-x86-exe
		]
		"Rebol/Core windows-x86" [
			name:     %rebol3-core-windows-x86
			:target-windows
			:include-rebol-core
			:make-x86-exe
		]
		"Rebol/Bulk windows-x86" [
			name:     %rebol3-bulk-windows-x86
			:target-windows
			:include-rebol-bulk
			:make-x86-exe
		]

		"Rebol/Base windows-x64" [
			name:     %rebol3-base-windows-x64
			:target-windows
			:make-x64-exe
		]
		"Rebol/Core windows-x64" [
			name:     %rebol3-core-windows-x64
			:target-windows
			:include-rebol-core
			:make-x64-exe
		]
		"Rebol/Bulk windows-x64" [
			name:     %rebol3-bulk-windows-x64
			:target-windows
			:include-rebol-bulk
			:make-x64-exe
		]

		"Rebol/Core windows-x86 shared library" [
			name:     %lib-rebol3-core-windows-x86
			:target-windows
			:include-rebol-core
			:make-x86-dll
			upx:      off ; library compiled using MSVC seems to make problems when UPXed  
		]
		"Rebol/Core windows-x86 host application" [
			name:     %host-core-windows-x86
			shared:   %lib-rebol3-core-windows-x86
			:target-windows
			:include-rebol-core
			:make-x86-host
		]

		"Rebol/Core windows-x64 shared library" [
			name:     %lib-rebol3-core-windows-x64
			:target-windows
			:include-rebol-core
			:make-x64-dll
		]
		"Rebol/Core windows-x64 host application" [
			name:     %host-core-windows-x64
			shared:   %lib-rebol3-core-windows-x64
			:target-windows
			:include-rebol-core
			:make-x64-host
		]
	]
	#if Linux? [
		"Rebol/Base linux-x64" [
			name:     %rebol3-base-linux-x64
			:target-linux
			:make-x64-exe
		]
		"Rebol/Core linux-x64" [
			name:     %rebol3-core-linux-x64
			:target-linux
			:include-rebol-core
			:make-x64-exe
		]
		"Rebol/Bulk linux-x64" [
			name:     %rebol3-bulk-linux-x64
			:target-linux
			:include-rebol-bulk
			:make-x64-exe
		]

		"Rebol/Core linux-x64 shared library" [
			name:     %lib-rebol3-core-linux-x64
			:target-linux
			:include-rebol-core
			:make-x64-dll
		]
		"Rebol/Core linux-x64 host application" [
			name:     %host-core-linux-x64
			shared:   %lib-rebol3-core-linux-x64
			:target-linux
			:include-rebol-core
			:make-x64-host
		]
	]
	#if macOS? [
		"Rebol/Base macos-x64" [
			name:   %rebol3-base-macos-x64
			:target-macos
			:make-x64-exe
		]
		"Rebol/Core macos-x64" [
			name:   %rebol3-core-macos-x64
			:target-macos
			:include-rebol-core
			:make-x64-exe
		]
		"Rebol/Bulk macos-x64" [
			name:   %rebol3-bulk-macos-x64
			:target-macos
			:include-rebol-bulk
			:make-x64-exe
		]
		"Rebol/Bulk macos-arm64" [
			name:   %rebol3-bulk-macos-arm64
			:target-macos
			:include-rebol-bulk
			:make-arm64-exe
		]

		"Rebol/Core macos-x64 shared library" [
			name:   %lib-rebol3-core-macos-x64
			:target-macos
			:include-rebol-core
			:make-x64-dll
		]
		"Rebol/Core macos-x64 host application" [
			name:   %host-core-macos-x64
			shared: %lib-rebol3-core-macos-x64
			:target-macos
			:include-rebol-core
			:make-x64-host
		]
	]
	#if OpenBSD? [
		"Rebol/Base openbsd-x64" [
			name:   %rebol3-base-openbsd-x64
			:target-openbsd
			:make-x64-exe
		]
		"Rebol/Core openbsd-x64" [
			name:   %rebol3-core-openbsd-x64
			:target-openbsd
			:include-rebol-core
			:make-x64-exe
		]
		"Rebol/Bulk openbsd-x64" [
			name:   %rebol3-bulk-openbsd-x64
			:target-openbsd
			:include-rebol-bulk
			:make-x64-exe
		]

		"Rebol/Core openbsd-x64 shared library" [
			name:   %lib-rebol3-core-openbsd-x64
			:target-openbsd
			:include-rebol-core
			:make-x64-dll
		]
		"Rebol/Core openbsd-x64 host application" [
			name:   %host-core-openbsd-x64
			shared: %lib-rebol3-core-openbsd-x64
			:target-openbsd
			:include-rebol-core
			:make-x64-host
		]
	]
	"Test extension 32bit" [
		name:  %test-x86.rebx
		files: only %tests/extension/test.c
		:arch-x86
		compiler: gcc
		flags: [-O2 shared]
		#if Linux? [
			flag: -fPIC
			compiler: gcc
		]
		#if MacOS? [
			:target-macos
		]
		#if OpenBSD? [
			flag: -fPIC
			:target-openbsd
		]
	]
	"Test extension 64bit" [
		name:  %test-x64.rebx
		files: only %tests/extension/test.c
		:arch-x64
		flags: [-O2 shared]
		#if Linux? [
			flag: -fPIC
			compiler: gcc
		]
		#if MacOS? [
			:target-macos
		]
		#if OpenBSD? [
			flag: -fPIC
			:target-openbsd
		]
	]
]
